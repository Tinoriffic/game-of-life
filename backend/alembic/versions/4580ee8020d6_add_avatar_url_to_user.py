"""Add avatar_url to user

Revision ID: 4580ee8020d6
Revises: 
Create Date: 2024-02-21 21:50:53.670906

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4580ee8020d6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP VIEW IF EXISTS workout_progress_view CASCADE")
    op.drop_constraint('activity_streaks_user_id_fkey', 'activity_streaks', type_='foreignkey')
    op.create_foreign_key(None, 'activity_streaks', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('skill_progression_user_id_fkey', 'skill_progression', type_='foreignkey')
    op.create_foreign_key(None, 'skill_progression', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('skills_user_id_fkey', 'skills', type_='foreignkey')
    op.create_foreign_key(None, 'skills', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('user_activities_user_id_fkey', 'user_activities', type_='foreignkey')
    op.create_foreign_key(None, 'user_activities', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('users', sa.Column('avatar_url', sa.String(), nullable=True))
    op.drop_constraint('weight_tracking_user_id_fkey', 'weight_tracking', type_='foreignkey')
    op.create_foreign_key(None, 'weight_tracking', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('workout_programs_user_id_fkey', 'workout_programs', type_='foreignkey')
    op.create_foreign_key(None, 'workout_programs', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('workout_session_exercises', 'set_number',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_workout_session_exercises_session_exercise_id'), 'workout_session_exercises', ['session_exercise_id'], unique=False)
    op.alter_column('workout_sessions', 'session_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=True)
    op.create_index(op.f('ix_workout_sessions_session_id'), 'workout_sessions', ['session_id'], unique=False)
    op.drop_constraint('workout_sessions_user_id_fkey', 'workout_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'workout_sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.execute("""
        CREATE VIEW workout_progress_view AS 
        SELECT 
            ws.user_id, 
            wse.session_id, 
            wse.program_exercise_id, 
            wpe.exercise_id, 
            e.name AS exercise_name, 
            wse.set_number, 
            wse.performed_reps, 
            wse.performed_weight, 
            ws.session_date, 
            (wse.performed_reps * wse.performed_weight) AS volume 
        FROM 
            workout_session_exercises wse 
        JOIN workout_program_exercises wpe ON wse.program_exercise_id = wpe.program_exercise_id 
        JOIN exercises e ON wpe.exercise_id = e.exercise_id 
        JOIN workout_sessions ws ON wse.session_id = ws.session_id;
    """)    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP VIEW IF EXISTS workout_progress_view CASCADE")
    op.drop_constraint(None, 'workout_sessions', type_='foreignkey')
    op.create_foreign_key('workout_sessions_user_id_fkey', 'workout_sessions', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_workout_sessions_session_id'), table_name='workout_sessions')
    op.alter_column('workout_sessions', 'session_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=False)
    op.drop_index(op.f('ix_workout_session_exercises_session_exercise_id'), table_name='workout_session_exercises')
    op.alter_column('workout_session_exercises', 'set_number',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'workout_programs', type_='foreignkey')
    op.create_foreign_key('workout_programs_user_id_fkey', 'workout_programs', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'weight_tracking', type_='foreignkey')
    op.create_foreign_key('weight_tracking_user_id_fkey', 'weight_tracking', 'users', ['user_id'], ['id'])
    op.drop_column('users', 'avatar_url')
    op.drop_constraint(None, 'user_activities', type_='foreignkey')
    op.create_foreign_key('user_activities_user_id_fkey', 'user_activities', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'skills', type_='foreignkey')
    op.create_foreign_key('skills_user_id_fkey', 'skills', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'skill_progression', type_='foreignkey')
    op.create_foreign_key('skill_progression_user_id_fkey', 'skill_progression', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'activity_streaks', type_='foreignkey')
    op.create_foreign_key('activity_streaks_user_id_fkey', 'activity_streaks', 'users', ['user_id'], ['id'])
    op.execute("""
        CREATE VIEW workout_progress_view AS 
        SELECT 
            ws.user_id, 
            wse.session_id, 
            wse.program_exercise_id, 
            wpe.exercise_id, 
            e.name AS exercise_name, 
            wse.set_number, 
            wse.performed_reps, 
            wse.performed_weight, 
            ws.session_date, 
            (wse.performed_reps * wse.performed_weight) AS volume 
        FROM 
            workout_session_exercises wse 
        JOIN workout_program_exercises wpe ON wse.program_exercise_id = wpe.program_exercise_id 
        JOIN exercises e ON wpe.exercise_id = e.exercise_id 
        JOIN workout_sessions ws ON wse.session_id = ws.session_id;
    """)
    # ### end Alembic commands ###
